{"version":3,"sources":["chat.tsx"],"names":[],"mappings":"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","file":"chat.d4f93b8b.js","sourceRoot":"../examples","sourcesContent":["import { useRef, useState } from 'react'\nimport * as React from 'react'\nimport styled from '@emotion/styled'\nimport { Virtuoso } from '../src/'\nimport faker from 'faker'\n\ninterface BubbleProps {\n  text: string\n  fromUser?: boolean\n  className?: string\n}\n\nconst BubbleWrap = styled.div<{ fromUser?: boolean }>`\n  display: flex;\n  justify-content: ${({ fromUser }) => fromUser && 'flex-end'};\n  width: 100%;\n  padding: 12px 0;\n`\n\nconst Content = styled.div<{ fromUser?: boolean }>`\n  background: ${({ fromUser }) => (fromUser ? 'orange' : 'red')};\n  color: white;\n  width: 60%;\n  padding: 12px;\n  border-radius: 4px;\n  word-break: break-word;\n`\n\nfunction Bubble({ text, fromUser, className }: BubbleProps) {\n  return (\n    <BubbleWrap fromUser={fromUser} className={className}>\n      <Content fromUser={fromUser}>{text}</Content>\n    </BubbleWrap>\n  )\n}\n\ninterface ChatListProps {\n  messages: { id: string; message: string }[]\n  userId: string\n  onSend: (message: string) => void\n  onReceive: () => void\n  height?: number\n  placeholder?: string\n}\n\nconst Root = styled.div<{ fromUser?: boolean }>`\n  padding: 12px 24px;\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  height: 100%;\n  margin-top: 12px;\n`\n\nfunction ChatList({ userId, messages = [], onSend, onReceive, placeholder }: ChatListProps) {\n  const [newMessage, setNewMessage] = useState('')\n  const ref = useRef(null)\n  const isMyOwnMessage = useRef(false)\n  const onSendMessage = () => {\n    isMyOwnMessage.current = true\n    onSend(newMessage)\n    setNewMessage('')\n  }\n\n  const onReceiveMessage = () => {\n    isMyOwnMessage.current = false\n    onReceive()\n  }\n\n  const row = React.useMemo(\n    () => (i: number, { message, id }: { message: string; id: string }) => {\n      const fromUser = id === userId\n      return <Bubble key={i} fromUser={fromUser} text={message} />\n    },\n    [userId]\n  )\n\n  return (\n    <Root\n      style={{\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        border: '1px solid red',\n      }}\n    >\n      <Virtuoso\n        ref={ref}\n        style={{ flex: 1 }}\n        initialTopMostItemIndex={messages.length - 1}\n        followOutput={(isAtBottom) => {\n          if (isMyOwnMessage.current) {\n            // if the user has scrolled away and sends a message, bring him to the bottom instantly\n            return isAtBottom ? 'smooth' : 'auto'\n          } else {\n            // a message from another user has been received - don't pull to bottom unless already there\n            return isAtBottom ? 'smooth' : false\n          }\n        }}\n        itemContent={row}\n        data={messages}\n      />\n      <TextWrapper style={{ flex: 0, minHeight: 30 }}>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault()\n            onSendMessage()\n          }}\n        >\n          <input\n            type=\"text\"\n            value={newMessage}\n            onChange={(e) => setNewMessage((e.target as HTMLInputElement).value)}\n            placeholder={placeholder}\n          />\n          <button type=\"submit\">send</button> |\n          <button type=\"button\" onClick={onReceiveMessage}>\n            receive\n          </button>\n        </form>\n      </TextWrapper>\n    </Root>\n  )\n}\n\nconst data = Array.from({ length: 130 }, (_) => ({\n  id: faker.random.number({ min: 1, max: 2 }).toString(),\n  message: faker.lorem.sentences(),\n}))\n\nexport default function App() {\n  const [messages, setMessages] = React.useState(data)\n  const userId = '1'\n  return (\n    <div\n      style={{\n        height: '500px',\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n    >\n      <ChatList\n        messages={messages}\n        userId=\"1\"\n        placeholder=\"Say hi!\"\n        onSend={(message) => setMessages((x) => [...x, { id: userId, message }])}\n        onReceive={() => {\n          setMessages((x) => [...x, { id: '2', message: faker.lorem.sentences() }])\n        }}\n      />\n    </div>\n  )\n}\n"]}