{"version":3,"sources":["grid-optimize-rendering.tsx"],"names":[],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAM,aAAa,GAAG,gBAAO,GAAV,mBAAnB;;AAuBA,IAAM,WAAW,GAAG,gBAAO,GAAV,oBAAjB;;AAUA,IAAM,aAAa,GAAG,gBAAO,GAAV,oBAAnB;;AAKA,IAAM,IAAI,GAAG,KAAK,CAAC,IAAN,CAAgB,gBAA6D;AAAA,MAA1D,IAA0D,QAA1D,IAA0D;AACxF,SAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,KAAK,EAAE;AAAE,MAAA,eAAe,EAAE,IAAI,CAAC,QAAL,GAAgB,MAAhB,GAAyB;AAA5C;AAAZ,GAAA,SAAA,EAAyE,IAAI,CAAC,KAA9E,CAAP;AACD,CAFY,CAAb;;AAIc,SAAU,GAAV,GAAa;AACzB,MAAM,GAAG,GAAG,KAAK,CAAC,SAAN,EAAZ;;AADyB,wBAEC,KAAK,CAAC,QAAN,CAAe,YAAK;AAC5C,WAAO,KAAK,CAAC,IAAN,CAAW;AAAE,MAAA,MAAM,EAAE;AAAV,KAAX,EAA6B,UAAC,CAAD,EAAI,KAAJ,EAAa;AAC/C,aAAO;AAAE,QAAA,KAAK,EAAL,KAAF;AAAS,QAAA,QAAQ,EAAE;AAAnB,OAAP;AACD,KAFM,CAAP;AAGD,GAJyB,CAFD;AAAA;AAAA,MAElB,KAFkB;AAAA,MAEX,QAFW;;AAQzB,MAAM,WAAW,GAAG,KAAK,CAAC,WAAN,CAClB,UAAC,KAAD;AAAA,WACE,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY;AACV,MAAA,OAAO,EAAE,mBAAK;AACZ,QAAA,QAAQ,CAAC,UAAC,KAAD,EAAU;AACjB,iBAAO,KAAK,CAAC,GAAN,CAAU,UAAC,IAAD,EAAO,CAAP,EAAY;AAC3B,mBAAO,CAAC,KAAK,KAAN,GAAc;AAAE,cAAA,KAAK,EAAE,CAAT;AAAY,cAAA,QAAQ,EAAE,CAAC,IAAI,CAAC;AAA5B,aAAd,GAAuD,IAA9D;AACD,WAFM,CAAP;AAGD,SAJO,CAAR;AAKD;AAPS,KAAZ,EASE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,MAAA,IAAI,EAAE,KAAK,CAAC,KAAD;AAAZ,KAAL,CATF,CADF;AAAA,GADkB,EAclB,CAAC,KAAD,EAAQ,QAAR,CAdkB,CAApB;AAiBA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAa;AACX,IAAA,GAAG,EAAE,GADM;AAEX,IAAA,UAAU,EAAE;AACV,MAAA,IAAI,EAAE,aADI;AAEV,MAAA,IAAI,EAAE;AAFI,KAFD;AAMX,IAAA,UAAU,EAAE,KAAK,CAAC,MANP;AAOX,IAAA,WAAW,EAAE,WAPF;AAQX,IAAA,KAAK,EAAE;AAAE,MAAA,MAAM,EAAE,GAAV;AAAe,MAAA,KAAK,EAAE;AAAtB;AARI,GAAb,CADF,CADF;AAcD","file":"grid-optimize-rendering.b49e36f5.js","sourceRoot":"../examples","sourcesContent":["import * as React from 'react'\nimport { VirtuosoGrid, GridComponents, VirtuosoGridHandle } from '../src'\nimport styled from '@emotion/styled'\n\nconst ItemContainer = styled.div`\n  box-sizing: border-box;\n  padding: 5px;\n  width: 25%;\n  background: #f5f5f5;\n  display: flex;\n  flex: none;\n  align-content: stretch;\n  /*\n  @media (max-width: 1024px) {\n    width: 33%;\n  }\n\n  @media (max-width: 768px) {\n    width: 50%;\n  }\n\n  @media (max-width: 480px) {\n    width: 100%;\n  }\n  */\n`\n\nconst ItemWrapper = styled.div`\n    flex: 1;\n    text-align: center;\n    font-size: 80%;\n    padding: 20px;\n    box-shadow: 0 5px 6px -6px #777;\n    background: white;\n  }\n`\n\nconst ListContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n` as GridComponents['List']\n\nconst Item = React.memo<any>(({ item }: { item: { index: number; selected: boolean } }) => {\n  return <div style={{ backgroundColor: item.selected ? 'blue' : 'white' }}>Item {item.index}</div>\n})\n\nexport default function App() {\n  const ref = React.createRef<VirtuosoGridHandle>()\n  const [items, setItems] = React.useState(() => {\n    return Array.from({ length: 1000 }, (_, index) => {\n      return { index, selected: false }\n    })\n  })\n\n  const itemContent = React.useCallback(\n    (index: number) => (\n      <ItemWrapper\n        onClick={() => {\n          setItems((items) => {\n            return items.map((item, i) => {\n              return i === index ? { index: i, selected: !item.selected } : item\n            })\n          })\n        }}\n      >\n        <Item item={items[index]} />\n      </ItemWrapper>\n    ),\n    [items, setItems]\n  )\n\n  return (\n    <>\n      <VirtuosoGrid\n        ref={ref}\n        components={{\n          Item: ItemContainer,\n          List: ListContainer,\n        }}\n        totalCount={items.length}\n        itemContent={itemContent}\n        style={{ height: 300, width: 1200 }}\n      />\n    </>\n  )\n}\n"]}