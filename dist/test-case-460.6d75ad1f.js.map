{"version":3,"sources":["test-case-460.tsx"],"names":[],"mappings":"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","file":"test-case-460.6d75ad1f.js","sourceRoot":"../examples","sourcesContent":["import * as React from 'react'\nimport { useState, useCallback, useEffect } from 'react'\nimport { Virtuoso } from '../src'\n\nconst getRandomArbitrary = (min: number, max: number) => {\n  return Math.random() * (max - min) + min\n}\n\n// globalThis['VIRTUOSO_LOG_LEVEL'] = 0\n\nconst ITEM_INDEX = 99999\n\nconst getItems = (count: number) => {\n  const temp = []\n  for (let i = 0; i < count; i++) {\n    temp.push(i)\n  }\n  return temp\n}\n\nexport default function App() {\n  const [items, setItems] = useState<number[]>([])\n  const [firstItemIndex, setFirstItemIndex] = useState(ITEM_INDEX)\n  const [id, setID] = useState(0)\n  const [, setVisibleRange] = useState({\n    startIndex: 0,\n    endIndex: 0,\n  })\n\n  const triggerChange = () => {\n    let newID: number\n    do {\n      newID = getRandomArbitrary(10, 20)\n    } while (newID === id)\n    setID(newID)\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      setItems(getItems(Number(id)))\n      setFirstItemIndex(ITEM_INDEX)\n    }, 200)\n\n    return () => {\n      setItems([])\n    }\n  }, [id])\n\n  const _rowRenderer = useCallback((_, item) => {\n    return <div style={{ padding: 20 }}>{item}</div>\n  }, [])\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', flex: 1 }}>\n      <button onClick={triggerChange}>Change item set</button>\n      <p>Item size: {items.length}</p>\n      <div style={{ height: 300 }}>\n        {items.length > 0 && (\n          <Virtuoso\n            firstItemIndex={firstItemIndex}\n            data={items}\n            components={{ Header: () => <div style={{ height: 10 }} /> }}\n            initialTopMostItemIndex={Math.max(0, items.length - 1)}\n            itemContent={_rowRenderer}\n            followOutput={'smooth'}\n            rangeChanged={setVisibleRange}\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n"]}