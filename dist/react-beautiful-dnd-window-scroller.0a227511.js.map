{"version":3,"sources":["react-beautiful-dnd-window-scroller.tsx"],"names":[],"mappings":"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","file":"react-beautiful-dnd-window-scroller.0a227511.js","sourceRoot":"../examples","sourcesContent":["import React, { useState } from 'react'\nimport { DropResult, DragDropContext, Draggable, Droppable, DraggableProvided } from 'react-beautiful-dnd'\nimport { Components, Virtuoso } from '../src'\n\ntype Item = { id: string; text: string }\nexport default function App() {\n  const [items, setItems] = useState(() => {\n    return Array.from({ length: 1000 }, (_, k) => ({\n      id: `id:${k}`,\n      text: `item ${k}`,\n    }))\n  })\n\n  const reorder = React.useCallback((list: Item[], startIndex: number, endIndex: number) => {\n    const result = Array.from(list)\n    const [removed] = result.splice(startIndex, 1)\n    result.splice(endIndex, 0, removed)\n\n    return result\n  }, [])\n\n  const onDragEnd = React.useCallback(\n    (result: DropResult) => {\n      if (!result.destination) {\n        return\n      }\n      if (result.source.index === result.destination.index) {\n        return\n      }\n\n      setItems((items) => reorder(items, result.source.index, result.destination!.index))\n    },\n    [setItems, reorder]\n  )\n\n  const Item = React.useMemo(() => {\n    return ({ provided, item, isDragging }: { provided: DraggableProvided; item: Item; isDragging: boolean }) => {\n      // For borders and visual space,\n      // use container with padding rather than a margin\n      // margins confuse virtuoso rendering\n      return (\n        <div\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          ref={provided.innerRef}\n          style={{ ...provided.draggableProps.style, paddingBottom: '8px' }}\n        >\n          <div\n            style={{\n              border: `1px solid ${isDragging ? 'red' : 'black'}`,\n            }}\n          >\n            {item.text}\n          </div>\n        </div>\n      )\n    }\n  }, [])\n\n  const HeightPreservingItem: Components['Item'] = React.useMemo(() => {\n    return ({ children, ...props }) => {\n      return (\n        // the height is necessary to prevent the item container from collapsing, which confuses Virtuoso measurements\n        <div {...props} style={{ height: props['data-known-size'] || undefined }}>\n          {children}\n        </div>\n      )\n    }\n  }, [])\n\n  return (\n    <div style={{ overflow: 'auto' }}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable\n          droppableId=\"droppable\"\n          mode=\"virtual\"\n          renderClone={(provided, snapshot, rubric) => (\n            <Item provided={provided} isDragging={snapshot.isDragging} item={items[rubric.source.index]} />\n          )}\n        >\n          {(provided) => {\n            return (\n              // eslint-disable-next-line\n              <div ref={provided.innerRef as any}>\n                <Virtuoso\n                  components={{\n                    Item: HeightPreservingItem,\n                  }}\n                  data={items}\n                  itemContent={(index, item) => {\n                    return (\n                      <Draggable draggableId={item.id} index={index} key={item.id}>\n                        {(provided) => <Item provided={provided} item={item} isDragging={false} />}\n                      </Draggable>\n                    )\n                  }}\n                  useWindowScroll={true}\n                />\n              </div>\n            )\n          }}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  )\n}\n"]}