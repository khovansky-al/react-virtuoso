{"version":3,"sources":["follow-output.tsx"],"names":[],"mappings":";;;;;;;AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAEc,SAAU,GAAV,GAAa;AAAA,kBACC,oBAAS,GAAT,CADD;AAAA;AAAA,MAClB,KADkB;AAAA,MACX,QADW;;AAEzB,MAAM,cAAc,GAAG,mBAAvB;;AAFyB,mBAGW,oBAAS,GAAT,CAHX;AAAA;AAAA,MAGlB,UAHkB;AAAA,MAGN,aAHM;;AAAA,mBAIa,oBAAiC,EAAjC,CAJb;AAAA;AAAA,MAIlB,WAJkB;AAAA,MAIL,cAJK;;AAKzB,MAAM,WAAW,GAAG,uBAClB,UAAC,KAAD,EAAkB;AAAA;;AAChB,QAAM,MAAM,yBAAG,WAAW,CAAC,KAAD,CAAd,mEAA0B,KAAK,GAAG,CAAR,GAAY,EAAZ,GAAiB,EAAvD;AACA,WACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,KAAK,EAAE;AAAE,QAAA,MAAM,EAAN,MAAF;AAAU,QAAA,UAAU,EAAE;AAAtB;AAAZ,KAAA,SAAA,EACQ,KADR,EAEE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,MAAA,OAAO,EAAE,mBAAK;AACZ,QAAA,cAAc,CAAC,UAAC,OAAD,EAAY;AACzB,iDACK,OADL,2BAEG,KAFH,EAEW,GAFX;AAID,SALa,CAAd;AAMD;AARH,KAAA,EAQG,GARH,CAFF,CADF;AAiBD,GApBiB,EAqBlB,CAAC,WAAD,EAAc,cAAd,CArBkB,CAApB;AAwBA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAM,QAAQ,CAAC,UAAC,KAAD;AAAA,eAAW,KAAK,GAAG,CAAnB;AAAA,OAAD,CAAd;AAAA;AAAjB,GAAA,EAAqD,cAArD,CADF,MAAA,EACiF,GADjF,EAEE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAM,aAAa,CAAC,UAAC,MAAD;AAAA,eAAY,MAAM,GAAG,EAArB;AAAA,OAAD,CAAnB;AAAA;AAAjB,GAAA,EAA6D,oBAA7D,CAFF,MAAA,EAE+F,GAF/F,EAGE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAM,aAAa,CAAC,UAAC,MAAD;AAAA,eAAY,MAAM,GAAG,EAArB;AAAA,OAAD,CAAnB;AAAA;AAAjB,GAAA,EAA6D,oBAA7D,CAHF,CADF,EAME,KAAA,CAAA,aAAA,CAAC,aAAD,EAAS;AACP,IAAA,UAAU,EAAE,KADL;AAEP,IAAA,uBAAuB,EAAE,EAFlB;AAGP,IAAA,YAAY,EAAE,QAHP;AAIP,IAAA,WAAW,EAAE,WAJN;AAKP,IAAA,KAAK,EAAE;AAAE,MAAA,MAAM,EAAE;AAAV,KALA;AAMP,IAAA,mBAAmB,EAAE,6BAAC,QAAD,EAAa;AAChC,MAAA,aAAa,CAAC,cAAc,CAAC,OAAhB,CAAb;;AACA,UAAI,QAAJ,EAAc;AACZ,QAAA,cAAc,CAAC,OAAf,GAAyB,WAAW,CAAC,YAAK,CACxC;AACD,SAFmC,EAEjC,GAFiC,CAApC;AAGD;AACF;AAbM,GAAT,CANF,CADF;AAwBD","file":"follow-output.4e36fca8.js","sourceRoot":"../examples","sourcesContent":["import * as React from 'react'\nimport { useState, useRef, useCallback } from 'react'\nimport { Virtuoso } from '../src'\n\nexport default function App() {\n  const [count, setCount] = useState(100)\n  const appendInterval = useRef<NodeJS.Timeout>()\n  const [listHeight, setListHeight] = useState(300)\n  const [itemHeights, setItemHeights] = useState<Record<number, number>>({})\n  const itemContent = useCallback(\n    (index: number) => {\n      const height = itemHeights[index] ?? (index % 2 ? 30 : 40)\n      return (\n        <div style={{ height, background: 'white' }}>\n          Item {index}\n          <button\n            onClick={() => {\n              setItemHeights((heights) => {\n                return {\n                  ...heights,\n                  [index]: 160,\n                }\n              })\n            }}\n          >\n            *\n          </button>\n        </div>\n      )\n    },\n    [itemHeights, setItemHeights]\n  )\n\n  return (\n    <>\n      <div>\n        <button onClick={() => setCount((count) => count + 4)}>Append Items</button> |{' '}\n        <button onClick={() => setListHeight((height) => height + 40)}>Increase container</button> |{' '}\n        <button onClick={() => setListHeight((height) => height - 40)}>Decrease container</button>\n      </div>\n      <Virtuoso\n        totalCount={count}\n        initialTopMostItemIndex={99}\n        followOutput={'smooth'}\n        itemContent={itemContent}\n        style={{ height: listHeight }}\n        atBottomStateChange={(atBottom) => {\n          clearInterval(appendInterval.current!)\n          if (atBottom) {\n            appendInterval.current = setInterval(() => {\n              // setCount((count) => count + 3)\n            }, 100)\n          }\n        }}\n      />\n    </>\n  )\n}\n"]}